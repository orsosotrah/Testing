name: Dynamic CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Analyze failure with Claude
        if: failure() && env.ANTHROPIC_API_KEY != ''
        run: |
          SYSTEM_PROMPT="You are an AI DevOps assistant. Analyze CI/CD logs and explain errors clearly."
          USER_PROMPT="Build failed in GitHub Actions. Please analyze the error and provide suggestions to fix it."
          
          CLAUDE_RESPONSE=$(curl -s -X POST https://api.anthropic.com/v1/complete \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "content-type: application/json" \
            -d '{
              "prompt": "'"$SYSTEM_PROMPT"'\n'"$USER_PROMPT"'",
              "model": "claude-instant-v1",
              "max_tokens_to_sample": 1000,
              "temperature": 0
            }')
          
          ANALYSIS=$(echo "$CLAUDE_RESPONSE" | jq -r '.completion')
          echo "Claude Analysis:"
          echo "$ANALYSIS"
      
      - name: Analyze failure with ChatGPT
        if: failure() && env.OPENAI_API_KEY != '' && env.ANTHROPIC_API_KEY == ''  
        run: |
          SYSTEM_PROMPT="You are an AI DevOps assistant. Analyze CI/CD logs and explain errors clearly."
          USER_PROMPT="Build failed in GitHub Actions. Please analyze the error and provide suggestions to fix it."
          
          CHATGPT_RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [
                {
                  "role": "system",
                  "content": "'"$SYSTEM_PROMPT"'"
                },
                {
                  "role": "user", 
                  "content": "'"$USER_PROMPT"'"
                }
              ],
              "max_tokens": 1000,
              "temperature": 0
            }')
          
          ANALYSIS=$(echo "$CHATGPT_RESPONSE" | jq -r '.choices[0].message.content')
          echo "ChatGPT Analysis:"
          echo "$ANALYSIS"
