name: CI

on:
  push:
    branches: [main, main]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.*'
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Analyze failure with GPT
        if: failure()
        run: |
          curl -X POST https://api.openai.com/v1/threads \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "messages": [{"role": "user", "content": "CI page log fail. Please analyze this: ..."}]
            }' \
            > thread.json

          cat thread.json
          THREAD_ID=$(jq -r .id thread.json)
          echo "Thread ID: $THREAD_ID"

          RUN_RESP=$(\
            curl -s "https://api.openai.com/v1/threads/${THREAD_ID}/runs" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d '{"assistant_id": "asst_BWuA2NrBrsQZRoyB7vqGDYEh"}'
          )
          echo "$RUN_RESP"

          RUN_ID=$(echo "$RUN_RESP" | jq -r .id)
          echo "Run ID: $RUN_ID"

          for i in {1..10}; do
            STATUS=$(curl -s "https://api.openai.com/v1/threads/${THREAD_ID}/runs/${RUN_ID}" \
              -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" | jq -r .status)
            echo "Run status: $STATUS"
            [ "$STATUS" = "completed" ] && break
            sleep 2
          done

          curl -s https://api.openai.com/v1/threads/${THREAD_ID}/messages \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            | jq -r '.data[0].content[0].text.value' > gpt_output.txt
      - name: Show GPT Analysis
        run: cat gpt_output.txt
      - name: Upload GPT Analysis Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gpt-analysis
          path: gpt_output.txt
